/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from 'bn.js';
import { ContractOptions } from 'web3-eth-contract';
import { EventLog } from 'web3-core';
import { EventEmitter } from 'events';
import {
	Callback,
	PayableTransactionObject,
	None,
	BlockType,
	ContractEventLog,
	BaseContract,
} from './types';

export interface EventOptions {
	filter?: object;
	fromBlock?: BlockType;
	topics?: string[];
}

export type ValueSet = ContractEventLog<{
	oldVal: string;
	newVal: string;
	0: string;
	1: string;
}>;

export interface Abi extends BaseContract {
	constructor(jsonInterface: any[], address?: string, options?: ContractOptions): Abi;
	clone(): Abi;
	methods: {
		retrieve(): NonPayableTransactionObject<string>;

		store(num: number | string | BN): NonPayableTransactionObject<void>;
	};
	events: {
		ValueSet(cb?: Callback<ValueSet>): EventEmitter;
		ValueSet(options?: EventOptions, cb?: Callback<ValueSet>): EventEmitter;

		allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
	};

	once(event: 'ValueSet', cb: Callback<ValueSet>): void;
	once(event: 'ValueSet', options: EventOptions, cb: Callback<ValueSet>): void;
}
